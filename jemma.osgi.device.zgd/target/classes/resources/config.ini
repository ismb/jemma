[main]
# Hardware platform desired: integration (0), zsdio/EZSP/freescale/MicroSD (1)
Platform = 1

# Autostart the ZigBee network: 0 to disable (it will wait for a StartGatewayDevice command), 1 to enabled
autostart = 0

# [Freescale only] Three possible scenario to startup the network:
#0 - StartupSetMode=0x18 (CommissioningMode) AND StartupControlMode=0x00 (Association) --> To be used the first time, when the network is created
#1 - StartupSetMode=0x00 (use NVM) AND StartupControlMode=0x04 (SilentStart) --> To be used at running time
#2 - StartupSetMode=0x18 (CommissioningMode) AND StartupControlMode=0x04 (SilentStart) --> To be used for TC Replacement
startupMode = 0

# Enable a local registration to device announcement events (1 to enable, 0 to disable)
localRegToDAnnce = 1

# Specify how long to wait (in seconds) before to start polling each node to verify if they're still alive ('0' to disable)
keepAliveThreshold = 90

# Once keepAliveThreshold is reached, GAL tries to ping the node for 'keepAliveNumberOfAttempt' before considering it dead
keepAliveNumberOfAttempt = 3

# Specify in seconds a timeout before to force the gateway to send a ping (MGMT_LQI_Req) to the nodes (0 to disable)
forcePingTimeout = 200

# Automatic discovery unknown nodes before sending or after receiving a message (1 to enable, 0 to disable)
autoDiscoveryUnknownNodes = 1

# [Optional] "Callback URI listener" address. It represent the "GW Status Changed event" default URI Listener
#gwStatusChanged_DefaultURIListener = http://10.192.33.20.:8080/gal/startup

# APS level parameters (required for fragmentation services)
apscMaxWindowSize = 1
apsInterframeDelay = 100

# To enable debug messages select "1"  (0 to disable)
debugEnabled = 0


[Debug]
# Printing levels for class debugging - 0 (DEBUGGING), 1 (TEST), 3 (PRODUCTION)
# HTTPServer class
HTTPServerDL = 0 
# HTTPSessionContext class
HTTPSessionContextDL = 3
# RESTClient class
RESTClientDL = 0 
# RESTBroker class
RESTBrokerDL = 0
# DiscoveryAgent class
DiscoveryAgentDL = 0
# ManagementAgent class
ManagementAgentDL = 0
# LocalNode class
LocalNodeDL = 0


[DefaultStartupAttributeSet]
# Device Type (0 =Current device type; 1=Coordinator; 2=Router; 3=End Device)
DeviceType = 1

# Default Channel Mask [valid range: 11 - 26, or '0' for all channels]
ChannelMask = 0

# ZigBee Network PANId ('0xFFFF' = generate random value)
PANId = 0xFFFF

# Extended PAN Id (big-endian order) - Note: Set all zeros for Freescale dongle
ExtendedPANId = 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

# StartupControl (0=Association; 1=Orphan Rejoin; 2=Network Rejoin; 3=Find and Rejoin; 4=Silent Start)
StartUpControl = 0

# SecurityLevel (0=Disabled, 5=Enabled)
SecurityLevel = 5

# [Freescale only] MAC Address mode: 0=use manufacture address (stored within the dongle), 1= generate random address
freescaleMACAddressValue = 0

# Default Network Key - Note: Set all zeros for Freescale dongle
networkKey = 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

# Default Trust Center Link Key - 'ZigBeeAlliance09'
preconfiguredLinkKey = 0x5a 0x69 0x67 0x42 0x65 0x65 0x41 0x6c 0x6c 0x69 0x61 0x6e 0x63 0x65 0x30 0x39

# Default End Point
DefaultEndPoint = 0x01

[TCKeyTable]
#TCKeyTableSize - Zero to disable the TrustCenterLinkKeytable - Note: maximum number of entries is 12 for Ember, 9 for Freescale
TCKeyTableSize = 0

#Entry n. 00
IEEEAddress00 = 0x00 0x0d 0x6f 0x00 0x00 0x09 0x99 0x1f
#TCLinkKey00 = 0x00 0x01 0x02 0x03 0x04 0x05 0x06 0x07 0x00 0x01 0x02 0x03 0x04 0x05 0x06 0x07
TCLinkKey00 = 0x5a 0x69 0x67 0x42 0x65 0x65 0x41 0x6c 0x6c 0x69 0x61 0x6e 0x63 0x65 0x30 0x39

#Entry n. 01
IEEEAddress01 = 0x00 0x0d 0x6f 0x00 0x00 0x09 0x93 0xa1
TCLinkKey01 = 0x00 0x01 0x02 0x03 0x04 0x05 0x06 0x07 0x00 0x01 0x02 0x03 0x04 0x05 0x06 0x08

#Entry n. 02
IEEEAddress02 = 0x00 0x0d 0x6f 0x00 0x00 0x18 0x57 0x46
TCLinkKey02 = 0x00 0x01 0x02 0x03 0x04 0x05 0x06 0x07 0x00 0x01 0x02 0x03 0x04 0x05 0x06 0x09


[TC]
# Insert the Trust Center IEEE Address
IEEE_ADDRESS = "17161514131201ff"
# Decide if the local ACL Conf shall be used (INSERT true) or if the WSN-C access is required (INSERT false)
JOINREQUESTPROCESSING = false
# Decide if process locally the leave notifications without warning the WSN-C (SELECT true). Otherwise insert false.
LEAVENOTIFICATIONPROCESSING = true
# File name containing the Access Control List
ACLFILENAME = acl.txt
# The network master key, 16-bytes long
NETWORKKEY = "11000000000000000000000000000011"
# The Security Timeout period (expressed in milliseconds)
APPSECURITYTIMEOUTPERIOD = 9999


[RESTBroker]
# Decide if the Network Root URI can be obtained by appending the net/default' suffix (SELECT 1), or by appending the net/<ExtendedPANId>' suffix (SELECT 0)
UseDefaultNWKRootURI = 1

# Gateway Descriptor Asynchonous notification period (expressed in seconds), respectively before and after a WSN-C is attached. Note: This is like an "Hello" message to the WSN-C platform address
HelloMsgNotifyPeriod = 10 
HelloMsg_WSNCAttached_NotifyPeriod = 1800

[RESTServer]
# Port server where to receive REST commands
serverPorts = "9000"

# RESTServer parameters
ssl = 0
sslCertFile = "shttpd.pem"
httpDigestAuth = 0
httpDigestAuthPwdFile = "pwdfile"


[RESTClient]
# libcurl HTTP option application timeout (in seconds) - Note: for remote connection between GW and IPHA insert a value higher than 1
httpOptTimeout = 3


[PerfomanceTest]
# Select the txPeriod used during the Performance tests
txPeriod = 100000
